#! /usr/bin/env ruby
#
# mspec - a spec runner for mini_rspec
#

require 'optparse'

module MSpec
  VERSION = '0.6.0'
end

# defaults
patterns = []
target = 'shotgun/rubinius'
format = 'DottedReporter'

opts = OptionParser.new("", 24, '   ') do |opts|
  opts.banner = "mspec [options] (FILE|DIRECTORY|GLOB)+"
  opts.separator ""

  opts.on("-f", "--format FORMAT", String, 
          "Formatter for reporting: s:specdox|d:dotted|c:CI|h:html") { |f|
    case f
    when 's', 'specdox', 'specdoc'
      format = 'SpecDoxReporter'
    when 'h', 'html'
      format = 'HtmlReporter'
    when 'd', 'dot', 'dotted'
      format = 'DottedReporter'
    when 'c', 'ci', 'integration'
      format = 'CIReporter'
    else
      puts "Unknown format: #{f}"
      puts opts
      exit
    end
  }
  opts.on("-t", "--target TARGET", String, 
          "Implementation that will run the specs: r:ruby|x:rbx|j:jruby") { |t|
    case t
    when 'r', 'ruby'
      target = 'ruby'
    when 'x', 'rbx', 'rubinius'
      target = 'shotgun/rubinius'
    when 'j', 'jruby'
      target = 'jruby'
    else
      puts "Unknown target: #{t}"
      puts opts
      exit
    end
  }
  opts.on("-v", "--version", "Show version") {
    puts "Mini RSpec #{MSpec::VERSION}"
    exit
  }
  opts.on("-h", "--help", "Show this message") {
    puts opts
    exit
  }
  
  patterns = opts.parse ARGV
end

if patterns.empty?
  puts "No files specified."
  puts opts
  exit
end

files = []
patterns.each do |item|
  stat = File.stat(File.expand_path(item))
  files << item if stat.file?
  files.concat(Dir[item+"/**/*_spec.rb"]) if stat.directory?
end

cmd = <<-EOC
#{target} -Ispec -rmini_rspec.rb -rmini_mock.rb -e '@reporter = #{format}.new;
#{files.inspect}.each { |f| load f }'
EOC
system cmd
