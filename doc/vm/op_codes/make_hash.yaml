---
mnemonic: make_hash
operation: >-
  Create a hash and populate with items on the stack
format: make_hash argc
opcode: 49
stack_before:
  - keyn
  - valuen
  - ...
  - key2
  - value2
  - key1
  - value1
  - ...
stack_after:
  -
    key1: value1
    key2: value2
    ...: ...
    keyn: valuen
  - ...
description: >-
  Creates a new hash, populating its contents with the number of items
  (_argc_) specified in the opcode. The contents of the new hash are taken from
  the stack, with the top item on the stack becoming the last key in the hash,
  the second top item becoming the last value, and so on. The resulting hash is
  added back to the stack.
source: |-
    next_int;
    t1 = hash_new(state);
    j = _int - 1;
    while(j >= 0) {
      t2 = stack_pop();
      t3 = stack_pop();
      hash_set(state, t1, t2, t3);
      j -= 2;
    }
    
    cpu_perform_hook(state, c, BASIC_CLASS(hash), 
                     state->global->sym_from_literal, t1);
    
    stack_push(t1);
