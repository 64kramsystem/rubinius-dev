---
mnemonic: open_class_under
operation: >-
  Creates or re-opens a class.
format: open_class_under cl
opcode: 31
stack_before:
  - super
  - encls
  - ...
stack_after:
  - class
  - ...
description: >-
  Creates or re-opens a class, popping the superclass (or nil) and the
  enclosing class from the stack. Upon return, the new class is pushed onto the
  stack.
  
  The _cl_ argument to the opcode is the class literal identifying the class to
  be opened.
see:
  - open_class
example: >-
  class A
  
  end
  
  
  class A::B < C
  
  end
  
  # Stack transition:
  
  # [...,A,C] => [...,B]
source: |-
    int created;
    t1 = stack_pop();
    t2 = stack_pop();
    t3 = cpu_open_class(state, c, t2, t1, &created);
    if(t3 != Qundef) {
      stack_push(t3);
      if(created) cpu_perform_hook(state, c, t3, global->sym_opened_class, t1);
    }
