---
mnemonic: unshift_tuple
operation: >-
  Shifts the first item in a tuple onto the stack
format: unshift_tuple
opcode: 34
stack_before:
  - "[value1, value2, ..., valueN]"
  - ...
stack_after:
  - value1
  - "[value2, ..., valueN]"
  - ...
description: >-
  Pops a tuple off the top of the stack. If the tuple is empty, the tuple is
  pushed back onto the stack, followed by nil. Otherwise, the tuple is shifted,
  with the tuple then pushed back onto the stack, followed by the item that was
  previously at the head of the tuple.
notes: >-
  This opcode is poorly named; it actually performs a shift, rather than an
  unshift.
source: |-
    t1 = stack_pop();
    sassert(REFERENCE_P(t1));
    if(NUM_FIELDS(t1) == 0) {
      stack_push(t1);
      stack_push(Qnil);
    } else {
      j = NUM_FIELDS(t1) - 1;
      t3 = tuple_at(state, t1, 0);
      t2 = tuple_new(state, j);
      object_copy_fields_from(state, t1, t2, 1, j);
      stack_push(t2);
      stack_push(t3);
    }
