---
mnemonic: create_block2
operation: >-
  Creates a compiler2 style block
format: create_block2
opcode: 109
stack_before:
  - cm
  - ...
stack_after:
  - blockenv
  - ...
description: >-
  Pops a compiled method _cm_ off of the stack, and converts it into a block
  environment _blockenv_, which is then pushed back onto the stack.
see:
  - create_block
notes: >-
  This opcode replaces "create_block":create_block.html, which is used under
  compiler1, but deprecated under compiler2. Unlike create_block which uses the
  same instruction sequence as the enclosing method context, create_block2 takes
  its own instruction sequence in the form of a compiled method.
source: |-
    t1 = stack_pop(); /* the method */
    t4 = c->active_context;

    t3 = Qnil;
    if(blokctx_s_block_context_p(state, t4)) {
      t3 = blokctx_home(state, t4);
    } else {
      t3 = t4;
    }
    
    methctx_reference(state, t4);
    methctx_reference(state, t3);
    
    cmethod_set_staticscope(t1,
               cmethod_get_staticscope(cpu_current_method(state, c)));

    t2 = blokenv_s_under_context2(state, t1, t3, t4);
    stack_push(t2);
