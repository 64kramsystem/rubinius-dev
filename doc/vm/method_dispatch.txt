== Method Dispatch

In a generalized sense, the method dispatch process in Rubinius consists of the following steps:
1. Caller pushes arguments to the method onto the stack
2. Caller pushes receiver onto the stack
3. +send_method+ is called with a literal identifying the method to be called
   on the receiver
4. Within the send_method opcode, the following steps are performed
   1. Lookup the method on the receiver object's singleton class, class,
      super-class hierarchy
   2. Obtain the CompiledMethod object for the method
   3. Examine the CompiledMethod object to determine how the arguments to the
      method are used. The CompiledMethod will store arguments in the
      MethodContext's local's tuple if the local is captured; otherwise, it is
      generally left on the stack and accessed via the frame pointer.

See
here[http://blog.fallingsnow.net/2007/03/01/performance-interfaces-and-tumblr/]
for some implementation details.

