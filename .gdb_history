p parse_state->top
s
n
s
n
n
c
q
run
q
run
q
run
q
run
bt
q
run
q
run
q
q
run
q
1 +
run
q
run
q
run
q
run
q
run
run
bt
up
p _inspect(c->method_module)
q
run
bt
q
run
q
run
q
run
q
run
q
run
q
run
q
run
q
run
q
run
q
run
bt
up
p rb_id2name(id)
p rb_p(klass)
q
run
up
p rb_p(obj)
run
p rb_backtrace()
q
run
bt
up
p c->paths
p c->paths->len
p i
q
run
bt
p _inspect(sym)
up
p _inspect(sym)
p rbs_symbol_to_cstring(sym)
p rbs_symbol_to_cstring(state, sym)
q
run
q
run
q
run
q
run
q
run
q
run
p g_ptr_array_remove_index
run
b g_ptr_array_remove_index
run
p index
p (int)index
c
p (int)index
n
d
run
q
run
q
run
q
run
q
run
bt
up
p bin
up
p entry
p hsh
q
run
up
p bins
up
p rbs_symbol_to_cstring(state, name)
p hsh
p _inspect(hsh)
p _inspect(klass)
bt
up
p recv
p _inspect(recv)
bt
run
bt
up
p _inspect(hsh)
p _inspect(klass)
up
p _inspect(obj)
up
p _real_class(state, recv)
p _inspect($10)
bt
q
run
set environment RDEBUG=1
run
q
set environment RDEBUG=1
run
q
run
bt
up
p state->global->symbols
p _inspect(state->global->symbols)
p _inspect(state->global->symbol)
p _inspect(state->global->symtbl)
p rbs_const_get(state, state->global->object, "Symbols")
p _inspect($5)
up
p cpu_const_get(state, c, 
q
run
q
run
up
p state->global->symbols
q
run
up
p rbs_const_get(state, "Symbols", state->global->object)
bt
q
run
q
run
up
p state->global->symbols
p rbs_const_get(state, "Symbols", state->global->object)
bt
run
bt
up
p rbs_const_get(state, state->global->object, "Symbols")
p string_to_sym(state, string_new(state, "Symbols"))
p cpu_const_get(state, c, $3, state->global->object)
p cpu_const_get(state, c, $3, state->global->fixnum_class)
b cpu.c:321
p cpu_const_get(state, c, $3, state->global->fixnum_class)
p i
n
p under
n
p val
p _inspect(under)
p c->paths->len
p _inspect(c->enclosing_class)
p c->paths->pdata
p c->paths->pdata[0]
p _inspect(c->paths->pdata[0])
p _inspect(c->paths->pdata[1])
p _inspect(c->paths->pdata[2])
p _inspect(c->paths->pdata[3])
p state->global->main
p *state->global
p *c
p _inspect(c->paths->pdata[0])
p c->paths->pdata[0]
p (int)c->paths->pdata[0]
p c->main
q
run
q
run
up
p _inspect(c->paths->pdata[0])
p _inspectq(c->paths->pdata[0]
q
run
q
run
q
run
q
run
q
run
q
run
q
run
q
run
q
run
q
run
q
run
q
run
q
run
bt
q
run
bt
q
run
q
