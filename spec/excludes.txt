Executing a Continuation
Kernel.at_exit should fire after all other code
Kernel.at_exit should fire in reverse order of registration
Kernel.rand is seeded uniquely at startup
Module#autoload does not autoload when the specified constant was already set
Module#class_variables returns an array with the names of class variables of self and self
Module#const_missing is invoked when an undefined constant is referenced in the scope of self
Module#const_set sets the constant with the given name to the given value
Module#const_set tries to convert the given name to a string using to_str
Module#extend_object extends the given object with constants and methods of self
Module#extend_object is called when an object gets extended with self
Module#extended is called when an object gets extended with self
Module#extended is called after Module#extend_object
Module#module_function makes the instance method versions private
Module#autoload registers the given filename to be loaded the first time that the Module with the given name is accessed
Thread#join raises any exceptions encountered in the thread body
The loop expression restarts the current iteration with redo