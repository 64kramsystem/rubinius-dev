Array#* handles recursive arrays like #join
Array#join handles recursive arrays
Executing a Continuation Using #call transfers execution to right after the Kernel.callcc block
Executing a Continuation Arguments given to #call (or nil) are returned by the Kernel.callcc block (as Array unless only one object)
Executing a Continuation #[] is an alias for #call
Creating Bindings No .new provided
Creating Bindings Kernel.binding creates a new Binding
Hash#inspect handles recursive hashes
Module#append_features(mod) gets called when self is included in another module/class
Module#autoload(name, filename) registers the given filename to be loaded the first time that the Module with the given name is accessed
Module#autoload(name, filename) does not autoload when the specified constant was already set
Module#autoload(name, filename) raises a NameError when an invalid constant name is given
Module#define_method(name, Method, &block) defines a new method with the given name and the given block as body in self
Module#extend_object(object) is called when an object gets extended with self
Module#extended(module) is called when an object gets extended with self
Module#extended(module) is called after Module#extend_object
String#gsub with pattern, replacement treats \1 sequences without corresponding captures as empty strings
String#gsub with pattern, replacement replaces \& and \0 with the complete match
String#gsub with pattern, replacement replaces \` with everything before the current match
String#gsub with pattern, replacement replaces \' with everything after the current match
String#gsub with pattern, replacement returns subclass instances when called on a subclass
String#gsub with pattern and block raises a RuntimeError if the string is modified while substituting
String#initialize doesn't change self when str isn't supplied
Numeric#coerce coerce strings to strings
String#=~ raises a TypeError if a obj is a string
String#%
Array#pack
Regexp#~ matchs against the contents of $_
Regexp#to_s returns a string in 
Thread.new creates a thread executing the given block
Thread.current returns the current thread
Thread.main returns the main thread
Thread#value returns the result of the block
Thread#alive? returns false when the thread is finished
Thread#join
Thread#status
Thread#inspect
Thread#alive?
Module#attr_accessor creates a getter and setter for each given attribute name
Module#define_method defines a new method with the given name and the given block as body in self
Module#extend_object is called when an object gets extended with self
Module#extended is called when an object gets extended with self
Module#extended is called after Module#extend_object
Module#attr_accessor converts non string/symbol/fixnum names to strings using to_str
Module#attr_reader converts non string/symbol/fixnum names to strings using to_str
Module#class_variables returns an array with the names of class variables of self and self's ancestors
Module#attr creates a getter for the given attribute name
Module#attr creates a setter for the given attribute name if writable is true
Module#attr converts non string/symbol/fixnum names to strings using to_str
Module#autoload registers the given filename to be loaded the first time that the Module with the given name is accessed
Module#autoload does not autoload when the specified constant was already set
Module#const_missing is invoked when an undefined constant is referenced in the scope of self
Module#module_function raises a TypeError when the given names can't be converted to string using to_str
Module#const_set sets the constant with the given name to the given value
Module#const_set tries to convert the given name to a string using to_str
Module#extend_object extends the given object with constants and methods of self
Module#method_added is called when a new method is defined in self
Module#method_removed is called when a method is removed from self
Module#method_undefined is called when a method is undefined from self
Module#module_function creates module functions for the given methods
Module#attr_writer creates a setter for each given attribute name
Module#module_function makes the instance method versions private
Module#module_function makes subsequently defined methods module functions if no names are given
Module#module_function tries to convert the given names to strings using to_str
