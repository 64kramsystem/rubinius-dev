require "rake"
require "rake/tasklib"
require "tempfile"

class Field
  attr_reader :name
  attr_reader :type
  attr_reader :offset

  def initialize(name, type)
    @name = name
    @type = type
    @offset = nil
  end

  def offset=(o)
    @offset = o
  end
end

class StructGenerator
  def self.generate(struct_name, fields, includes)
    binary = "rb_struct_gen_bin_#{Process.pid}"

    Tempfile.open("rbx_struct_gen_tmp") do |f|
      f.puts "#include <stdio.h>"

      includes.each do |inc|
        f.puts "#include <#{inc}>"
      end

      f.puts "#include <stddef.h>\n\n"
      f.puts "int main(int argc, char **argv)\n{"

      fields.each do |field|
        f.puts <<EOF
  printf("%s %i\\n", "#{field.name}", offsetof(#{struct_name}, #{field.name}));
EOF
      end

      f.puts "\n\treturn 0;\n}"
      f.flush

      `gcc -x c -Wall #{f.path} -o #{binary}`
    end

    output = `./#{binary}`
    File.unlink(binary)

    line_no = 0

    output.each_line do |line|
      md = line.match(/.+ (\d+)/)
      fields[line_no].offset = md.captures.first.to_i

      line_no += 1
    end

    buf = ""

    fields.each_with_index do |field, i|
      if buf.empty?
        buf << "layout :#{field.name}, :#{field.type}, #{field.offset}"
      else
        buf << "       :#{field.name}, :#{field.type}, #{field.offset}"
      end

      if i < fields.length - 1
        buf << ",\n"
      end
    end

    buf
  end
end

class String
  def indent(amount)
    out = ""
    ind = " " * amount

    each_line do |line|
      out << ind << line
    end

    out
  end
end

module Rake
  class StructGeneratorTask < TaskLib
    attr_accessor :dest, :struct_name, :includes, :fields,
                  :prolog, :epilog

    def initialize
      @dest = nil
      @struct_name = nil
      @includes = []
      @fields = []
      @prolog = nil
      @epilog = nil

      yield self if block_given?

      define
    end

    def define
      file @dest do |t|
        layout = StructGenerator.generate(@struct_name, @fields, @includes)

        File.open(t.name, "w") do |f|
          f.puts "# This file is generated by rake. Do not edit."
          f.puts
          f.puts @prolog unless @prolog.nil?
          f.puts layout
          f.puts @epilog unless @epilog.nil?
        end
      end
    end
  end
end
